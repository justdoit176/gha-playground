name: 'GitHub Release Generator and Publisher'
description: 'Publish a GitHub release with generated release notes'

inputs:
  github_token:
    description: 'GitHub token'
    required: true
  dry_run:
    description: 'If true, output changelog to action summary instead of publishing'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Determine tag
      id: get_tag
      shell: bash
      run: |
        if [ -n "$GITHUB_REF" ] && [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG=${GITHUB_REF#refs/tags/}
          echo "Detected tag from GITHUB_REF: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        else
          echo "Error: Unable to detect tag"
          exit 1
        fi

    - name: Check if release exists
      id: check_release
      shell: bash
      run: |
        TAG_NAME="${{ steps.get_tag.outputs.tag }}"
        RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME"
        HTTP_STATUS=$(curl -s -o response.json -w "%{http_code}" -H "Authorization: token ${{ inputs.github_token }}" $RELEASE_URL)
        if [ "$HTTP_STATUS" = "404" ]; then
          echo "Release does not exist for tag $TAG_NAME."
          echo "release_exists=false" >> $GITHUB_OUTPUT
        elif [ "$HTTP_STATUS" = "200" ]; then
          echo "Release already exists for tag $TAG_NAME."
          echo "release_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Unexpected response code: $HTTP_STATUS"
          echo "Response body:"
          cat response.json
          exit 1
        fi

    - name: Set env vars
      run: echo "REPO_DIR=${{ github.workspace }}/repo4gitcliff" >> $GITHUB_ENV
      shell: bash

    - name: Checkout repository
      if: steps.check_release.outputs.release_exists == 'false'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: ${{ env.REPO_DIR }}

    - name: Generate release notes
      id: generate_changelog
      if: steps.check_release.outputs.release_exists == 'false'
      uses: orhun/git-cliff-action@v4
      env:
        GIT_CLIFF_WORKDIR: ${{ env.REPO_DIR }}
      with:
        config: ${{ github.action_path }}/cliff.toml
        args: --latest --use-branch-tags --no-exec

    - name: Output release notes to summary
      if: steps.check_release.outputs.release_exists == 'false'
      shell: bash
      run: |
        echo "# Changelog for ${{ steps.get_tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.generate_changelog.outputs.content }}" >> $GITHUB_STEP_SUMMARY

    - name: Publish GitHub release
      if: inputs.dry_run != 'true' && steps.check_release.outputs.release_exists == 'false'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        body: ${{ steps.generate_changelog.outputs.content }}
        generate_changelog: true

    - name: Clean up checkout directory
      if: always()
      shell: bash
      run: rm -rf "${REPO_DIR}"